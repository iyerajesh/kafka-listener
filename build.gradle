buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

project.group = "${artifactGroup}"
project.version = "${artifactVersion}"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "http://packages.confluent.io/maven/" }
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
    useJUnitPlatform()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-webflux"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile 'org.springframework.kafka:spring-kafka'
    compile "com.h2database:h2"

    compile group: 'com.jfrog.bintray', name: 'com.jfrog.bintray.gradle.plugin', version: '1.8.4'

    compile "io.confluent:kafka-avro-serializer:${kafkaAvroSerializer}"

    testImplementation "org.springframework.kafka:spring-kafka-test"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

bootJar {
    baseName = "${artifactName}"
    version =  "${artifactVersion}"
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: repoReleaseUrl) {
                authentication(userName: "${repoUserName}", password: "${repoApiKey}")
            }
            pom.groupId = project.group
            pom.artifactId = project.name
            pom.version = project.version
        }
    }
}